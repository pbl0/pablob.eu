{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"pablo's docs","text":""},{"location":"#recent-posts","title":"Recent Posts","text":"<ul> <li>September 13, 2023 - Thinkcentre Tiny Server</li> <li>August 27, 2023 - How to install Davinci Resolve in any linux distro</li> <li>February 20, 2023 - Learning how to drive in Assetto Corsa</li> <li>January 25, 2023 - How to fix Elite Dangerous launcher issues on Linux</li> <li>January 14, 2023 - Remove Kobo DRM</li> </ul> <p>See all posts</p>"},{"location":"#other-stuff","title":"Other stuff","text":"<ul> <li>My programming projects</li> <li>About me</li> <li>My Github profile</li> <li>My youtube channel</li> <li>Contact me on Telegram</li> </ul>"},{"location":"code/","title":"Projects","text":"<ul> <li>RR Tools (Angular &amp; Android app with i18n support)</li> <li>pablo bot (Python telegram bot)</li> <li>geoguessr random bot (Python telegram bot &amp; Firestore)</li> <li>This website (mkdocs)</li> <li>Launchpad2KB (Python)</li> <li>Banana Spleet (Python)</li> <li>Lambda-rr (Mkdocs)</li> </ul>"},{"location":"me/","title":"Me","text":"<p>I'm Pablo, a programmer and this is my website. Professionally I've worked mostly with Angular, but from time to time I also mess around with Python, React, Godot and a few others. Besides computers and programming I also love listening (and sometimes pretending to play) music, playing video-games and reading books. I also have fun with some gardening and taking random pictures of the sky and nature. Oh, I also like dogs, of course.</p>"},{"location":"me/#why-did-you-make-a-website","title":"Why did you make a website?","text":"<p>Why not?</p>"},{"location":"me/#some-hobby-projects-ive-made","title":"Some hobby projects I've made","text":""},{"location":"me/#some-fancy-stats","title":"Some fancy stats","text":"My best friend Amora"},{"location":"me/#where-the-source","title":"Where the source?","text":"<p>github.com/pbl0/pablob.eu</p>"},{"location":"me/#donate","title":"Donate","text":""},{"location":"minecraft/","title":"Minecraft server","text":"<p>Mostly vanilla survival Java minecraft server.</p> Icon Server address <pre><code>pablob.eu</code></pre> Status Players online 0 Player list Version Rules/Info Server rules (Spanish) Group chat https://t.me/+kSekwGtYOakwOGZk"},{"location":"music/","title":"Music","text":"<p>My playlists:</p>"},{"location":"blog/","title":"Blog","text":""},{"location":"blog/2022/01/02/banana-spleet/","title":"Banana Spleet","text":"<p>Recently I've been working on my spare time on a simple GUI app for the interesting tool called Spleeter by Deezer. Spleeter is a \"source separation library with petrained models\" whatever that means. It basically takes a song and splits it according to the different instruments and vocals it's AI detects. The end result is indeed quite impressive.</p> <p></p> <p>As Spleeter is originally just a CLI app, what I did was basically a GUI to use it. I've found a few similar projects on github but the ones that stood out to me sadly only worked on Windows (I use linux btw). It was also a great opportunity to use this silly name.</p> <p>My take on this was using python, not only because I'm already quite familiar with this language, but also because that's also what Spleeter is built with, so I can easily import it's methods.</p> <p>You can read more and install from here.</p>"},{"location":"blog/2023/08/27/how-to-install-davinci-resolve-in-any-linux-distro/","title":"How to install Davinci Resolve in any linux distro","text":"<p>How to install Davinci Resolve in any linux distro with distrobox. For this case I'm using Manjaro Linux as the host system and with the free version of the video editor.</p> <p></p>"},{"location":"blog/2023/08/27/how-to-install-davinci-resolve-in-any-linux-distro/#installation","title":"Installation","text":"<ul> <li>Install distrobox and podman:</li> </ul> <pre><code>sudo pacman -Syu podman distrobox\n</code></pre> <ul> <li>Create a Fedora container with distrobox:</li> </ul> <pre><code>distrobox-create --name fedora --image fedora:38\n</code></pre> <ul> <li> <p>Download Davinci Resolve from the official website and extract the zip file.</p> </li> <li> <p>Enter your distrobox container:</p> </li> </ul> <pre><code>distrobox enter fedora\n</code></pre> <pre><code>sudo dnf update\n</code></pre> <ul> <li> <p>Running <code>DaVinci_Resolve_18.5.1_Linux.run -i</code> will give many dependency errors, install whatever package it ask using <code>dnf install</code> and re-run the executable.</p> </li> <li> <p>In my case with an AMD GPU:</p> <pre><code>sudo dnf install fuse fuse-devel alsa-lib \\\napr apr-util dbus-libs fontconfig freetype \\\nlibglvnd libglvnd-egl libglvnd-glx \\\nlibglvnd-opengl libICE librsvg2 libSM \\\nlibX11 libXcursor libXext libXfixes libXi \\\nlibXinerama libxkbcommon libxkbcommon-x11 \\\nlibXrandr libXrender libXtst libXxf86vm \\\nmesa-libGLU mtdev pulseaudio-libs xcb-util \\\nxcb-util-image xcb-util-keysyms \\\nxcb-util-renderutil xcb-util-wm \\\nmesa-libOpenCL rocm-opencl libxcrypt-compat \\\nalsa-plugins-pulseaudio\n</code></pre> </li> <li> <p>When you notice it doesn't complain about dependencies anymore. Run the executable again with <code>sudo</code>. That should launch the installer.</p> </li> <li> <p>After that, in my case, launching <code>/opt/resolve/bin/resolve</code> would result in a glib error that I've solved by renaming every libglib within <code>/opt/resolve/libs</code> as shown below. This apparently forces Davinci Resolve to use the system's libraries instead of the ones that come built-in with the video editor.</p> </li> </ul> <pre><code>cd /opt/resolve/libs\n\nsudo mv libglib-2.0.so.0.6800.4 libglib-2.0.so.0.6800.4.bak\nsudo mv libglib-2.0.so.0 libglib-2.0.so.0.bak\nsudo mv libglib-2.0.so libglib-2.0.so.bak\n</code></pre> <ul> <li> <p>Now if you run <code>/opt/resolve/bin/resolve</code> within the container it will hopefully open Davinci Resolve without any more errors.</p> </li> <li> <p>To integrate the application to your host system run:</p> </li> </ul> <pre><code>distrobox-export --app /opt/resolve/bin/resolve\n</code></pre> <p>For some reason the default launcher created with the previous command will fail to launch. If this happens right click on Davinci Resolve icon &gt; Edit Application &gt; Application and leave the <code>Work Path</code> field empty.</p> <p> </p> Edit app launcher <ul> <li> <p>Now you should be able to launch Davinci Resolve from your host system and start editing!</p> </li> <li> <p>Be careful when cleaning podman containers by executing <code>podman system prune</code> as it may delete the distrobox container.</p> </li> </ul> <p> </p> Davinci Resolve"},{"location":"blog/2023/08/27/how-to-install-davinci-resolve-in-any-linux-distro/#issues-detected","title":"Issues detected","text":"<ul> <li>Will crash every time I click on the Fusion tab.</li> <li>Doesn't work with H264 clips.</li> </ul>"},{"location":"blog/2023/01/25/how-to-fix-elite-dangerous-launcher-issues-on-linux/","title":"How to fix Elite Dangerous launcher issues on Linux","text":"<p>Elite Dangerous used to be playable out the box using Steam Proton but for some reason in the last few years it has become an immense hassle to play Elite Dangerous on Linux. While the game itself runs fine most of the times the launcher itself it's the one causing issues and it's completely broken under Linux.</p> <p></p> <p>Sadly, Frontier Developments doesn't seem to care enough about Linux users, so we might need to try many of the solutions that users have suggested at protondb and see if anything works, which in my case they never did, except one.</p> <p>After many months of not being able to launch the game, I randomly found out that there is a third-party launcher called min-ed-launcher (Minimal Elite Dangerous Launcher) that replaces the original launcher and runs directly from terminal. And it just works!</p>"},{"location":"blog/2023/01/25/how-to-fix-elite-dangerous-launcher-issues-on-linux/#how-to-install-min-ed-launcher","title":"How to install Min-Ed-Launcher","text":"<p>You can simply download it from their github but in my case I got it from the AUR.</p> <pre><code>yay -S min-ed-launcher-bin\n</code></pre> <p>Next I've changed the game Launch Options on Steam to launch Elite Dangerous Odyssey expansion using Konsole and prime-run:</p> <pre><code>konsole -e prime-run MinEdLauncher %command% /autorun /autoquit /edo\n</code></pre> <p>You will probably better off when you read MinEdLauncher documentation and set up to your own configuration.</p> <p>Then launch the game and enjoy.</p> <p> </p> Minimal Launcher <p>That's all.</p> <p>Bye</p>"},{"location":"blog/2022/09/05/geoguessr-random-bot/","title":"Geoguessr random bot","text":""},{"location":"blog/2022/09/05/geoguessr-random-bot/#geoguessr-random-challenges-telegram-bot","title":"Geoguessr random challenges telegram bot","text":"<p>I've made yet another telegram bot! Yay!</p> <p>@geo_random_bot will send you random Geoguessr challenges links.</p> <p></p> <p>\"GeoGuessr is a geography game which takes you on a journey around the world and challenges your ability to recognize your surroundings.\"</p> <p>Geoguessr challenges are a great way to start playing this game as they are completely free to play. This bot receives the challenge and stores them in a database, then it will answer whenever it receives the <code>/random</code> command with a previously stored random link. Should work in groups too.</p> <p> </p> A random challenge"},{"location":"blog/2022/09/05/geoguessr-random-bot/#usage","title":"Usage","text":"<p>Talk to @geo_random_bot</p> <ul> <li> <p><code>/random</code> sends a random challenge</p> </li> <li> <p>You can also specify the map, example:</p> <p><code>/random World</code></p> </li> <li> <p><code>/all</code> Shows a list of every challenge (Doesn't work in groups)</p> </li> </ul> <p>Send a challenge link to the bot and it will be saved it on the database.</p> <ul> <li>Example of a challenge link: <code>https://geoguessr.com/challenge/e0gOWtp7rzSKbPgw</code></li> </ul>"},{"location":"blog/2022/09/05/geoguessr-random-bot/#other-stuff","title":"Other stuff","text":"<p>In case you are interested in the technical aspects of the bot I've used the following python libraries:</p> <ul> <li>python-telegram-bot to make the bot.</li> <li>firebase-admin google's firestore database</li> <li>requests to contact geoguessr api to gather the map name and the rules of the challenge.</li> </ul> <p>This project took me a couple of hours to get the core functionality (store and send links) working and a couple of weeks more to polish everything else, such as showing the name of the map and the rules of the challenge, adding buttons and the complementary commands (<code>/start</code> and <code>/all</code>).</p> <p>Might add some other features in the futures... Maybe.</p>"},{"location":"blog/2021/12/29/hello-world/","title":"Hello World","text":"<p>This the first entry on my personal blog. I've thinking for a long time on creating a blog mostly as a reminder to my own self of the stuff I do, just because I tend to forget. Also I will take the opportunity to learn a bit of Gatsbyjs, React and English, which are all technologies that I'm not very used to.</p> <p></p> <p>My blog won't be centered to any specific topic: I like music, games, gardening, reading books, astronomy, linux, open source and a long list of ways of messing around with computers and alikes. And also dogs of course.</p> <p>Well, that's all, hope you liked this uninspired introduction. It's been my pleasure!</p>"},{"location":"blog/2022/04/12/raspberrypi-home-server-tour/","title":"RaspberryPi home server tour","text":"<p>Just a little video showcasing the services I'm running on my little home server hosted at my RaspberryPi which runs Manjaro ARM Minimal.</p> <p></p> <p>Services currently running:</p> <ul> <li>Homer: Dashboard</li> <li>Plex: Netflix clone.</li> <li>Radarr &amp; Sonarr: For easy downloading Movies &amp; TV Shows torrents.</li> <li>Calibre-web: Book-management, great integration with Kobo e-readers.</li> <li>Lychee: Image-management.</li> <li>Cockpit: Linux server administration tool.</li> <li>Portainer: Docker container management</li> <li>Syncthing: Syncing files between devices.</li> <li>Transmission: Torrent client.</li> <li>Jackett: Feeds sonarr &amp; radarr torrent indexers.</li> <li>Tailscale:Very easy VPN connection.</li> </ul>"},{"location":"blog/2022/08/13/my-kobo-ereader/","title":"My Kobo eReader","text":"<p>For some time I've been trying to recover the habit of reading and for some reason I thought that the best way to accomplish that was to buy an eReader device.</p> <p>So, last year I've got myself a fairly cheap refurbished Kobo Clara HD from Ali Express. The experience has been very pleasant overall and I definitely read more now.</p> <p></p>"},{"location":"blog/2022/08/13/my-kobo-ereader/#why-not-kindle","title":"Why not Kindle?","text":"<p>Because Kobo devices are capable to read <code>.epub</code> files, while kindle are limited to their proprietary format.</p>"},{"location":"blog/2022/08/13/my-kobo-ereader/#mods-and-apps","title":"Mods and Apps","text":"<p>When it arrived I didn't know it had such a great modding community and funnily enough my device already came with koreader and nickelmenu pre-installed. I will now explain what these tools are and list all the hacks/modifications I've tried for this device.</p> <p> </p> Kobo main menu"},{"location":"blog/2022/08/13/my-kobo-ereader/#koreader-plato","title":"Koreader &amp; Plato","text":"<p>These two are alternative reader apps. Koreader has an horrendous UI but has many advanced features. Plato on the other hand, it's much prettier and user friendly. In the end I preferred using the default reader most of the time, although the previous two seem to be better for PDF reading which is something I seldom do.</p>"},{"location":"blog/2022/08/13/my-kobo-ereader/#nickelmenu","title":"Nickelmenu","text":"Nickelmenu <p>Nickelmenu allows to add new entries to the many different menus such as start a ftp server, open the web browser, import new books, run apps, etc. Requires a bit of manual configuration but it was easy enough.</p>"},{"location":"blog/2022/08/13/my-kobo-ereader/#kepubify","title":"Kepubify","text":"<p>Soon I've realized that the books downloaded from the Kobo store worked better on the default reader than the ones from other sources. I've luckily came across with kepubify which converts the .epub files to the .kepub format used by Kobo for that matter. Kepubify has both a CLI app and a web app.</p>"},{"location":"blog/2022/08/13/my-kobo-ereader/#calibre-web","title":"Calibre-Web","text":"Calibre web <p>This one really surprised me. Calibre-Web it's a selfhosted web app that I run on my Raspberry Pi server. My original idea was accesing it through the built-in browser but that didn't work at all for me. By reading on their github wiki I've found out that Calibre-Web has an amazing Kobo sync integration.</p> <p>It manages to connect the device to calibre web tricking it to believe that it's querying the official Kobo servers. It syncs all my books and auto-converts them with kepubify.</p>"},{"location":"blog/2022/08/13/my-kobo-ereader/#books","title":"Books","text":"<p>Either buy books from Kobo store directly o buy books without DRM. You can also learn how to remove DRM from kobo's books. A great source for free books is Anna's Archive.</p>"},{"location":"blog/2022/08/21/launchpad2kb/","title":"Launchpad2KB","text":"<p>A linux CLI tool to map keyboard hotkeys with the Novation Launchpad device.</p> <p>Read on Github</p> <p></p> <p>Important: I have only tested this implementation with the first Novation Launchpad, model <code>NOVLPD01</code>.</p>"},{"location":"blog/2022/08/21/launchpad2kb/#usage","title":"Usage","text":"<p>Download and unzip from latest release</p> <pre><code>./launchpad2KB\n</code></pre> <p>This will ask for the MIDI port, and will default the config file to <code>config/config.yml</code>. You can also pass the port number and the config file, as follows:</p> <pre><code>./launchpad2KB --port=1 --config=config/config.yml\n</code></pre> <p>Or</p> <pre><code>./launchpad2KB -p 1 -c config/config.yml\n</code></pre> <p>For some reason sometimes it won't start detecting the device presses. When this happens pressing the <code>mixer</code> button on the top-right of your device is enough for it to start working.</p>"},{"location":"blog/2022/08/21/launchpad2kb/#configuration","title":"Configuration","text":"<p>The configuration file must be in <code>.yaml</code> or <code>.yml</code> format. There is an example config file at config/config.yml. For each cell you will require to set it as follows:</p> <p>Example:</p> <pre><code>- cell: 112\nkeys:\n- \"ctrl\"\n- \"shift\"\n- \"e\"\ncolor: 120\n</code></pre> <p>This will bind the cell 112 to trigger <code>CTRL+SHIFT+E</code> when pressed.</p> <ul> <li><code>cell</code> indicates the cell number (see image below).</li> <li><code>keys</code> are the keyboard keys to be pressed. Keys reference.</li> <li><code>color</code> is a number ranging from 0 to 127.</li> </ul> <p>Example of multiple cells:</p> <pre><code>- cell: 112\nkeys:\n- \"ctrl\"\n- \"shift\"\n- \"e\"\ncolor: 120\n- cell: 113\nkeys:\n- \"ctrl\"\n- \"shift\"\n- \"f\"\ncolor: 80\n- cell: 113\nkeys:\n- \"f\"\ncolor: 60\n</code></pre>"},{"location":"blog/2022/08/21/launchpad2kb/#run-from-source","title":"Run from source","text":"<ul> <li>Create virtual enviroment &amp; install dependencies</li> </ul> <pre><code>virtualenv env\nsource env/bin/activate\np\u00ecp install -r requirements.txt\n</code></pre> <ul> <li>Tkinter is also required:</li> </ul> <p>Arch linux</p> <pre><code>sudo pacman -S tk\n</code></pre> <p>Debian &amp; Ubuntu</p> <pre><code>sudo apt-get install python3-tk\n</code></pre> <p>Fedora</p> <pre><code>sudo dnf install python3-tkinter\n</code></pre> <p>Then run as shown previously replacing <code>./launchpad2KB</code> with <code>python src/main.py</code>.</p> <p>Haven't tested it on Windows/MacOS.</p>"},{"location":"blog/2022/08/21/launchpad2kb/#cells","title":"Cells","text":""},{"location":"blog/2023/02/20/learning-how-to-drive-in-assetto-corsa/","title":"Learning how to drive in Assetto Corsa","text":"<p>Just showing off some visual mods, dynamic weather and my bad driving. My computer isn't very powerful but still very pretty to look at.</p> <p></p>"},{"location":"blog/2023/02/20/learning-how-to-drive-in-assetto-corsa/#mods-used","title":"Mods used","text":"<ul> <li>CSP</li> <li>Pure</li> <li>RainFX (CSP preview)</li> <li>Track: Feldbergring</li> </ul>"},{"location":"blog/2022/10/16/raspberry-pi-media-server-with-manjaro/","title":"Raspberry PI media server with Manjaro","text":"<p>Instructions to set up a media server running Manjaro ARM Minimal (Yes! manjaro). I wrote this \"guide\", mostly to remember myself in the future but feel free to follow along.</p> <p>Last edit: 23/07/2023</p> <p></p>"},{"location":"blog/2022/10/16/raspberry-pi-media-server-with-manjaro/#why-manjaro","title":"Why Manjaro?","text":"<p>After trying DietPi and completely breaking the system after and update going wrong, I've decided to try Manjaro ARM instead, which was super easy to set up. I know that neither Manjaro nor Arch are meant to be used on a server system, but it's been working fine on my Raspberry Pi4 for almost 3 years.</p> <p>While Manjaro offers access to AUR packages I've decided to use docker instead for packages that aren't available on Manjaro repos.</p>"},{"location":"blog/2022/10/16/raspberry-pi-media-server-with-manjaro/#configuration","title":"Configuration","text":"<ol> <li> <p>Connect to network using ethernet</p> </li> <li> <p>Update mirrors &amp; installed packages</p> <p><code>sudo pacman-mirrors --fasttrack &amp;&amp; sudo pacman -Syyu</code></p> </li> <li> <p>Install network manager</p> <p><code>sudo pacman -S networkmanager</code></p> </li> <li> <p>Connect to wifi using 'nmtui'</p> </li> <li> <p>Setup up SFTP    Change <code>PasswordAuthentication yes</code> on <code>/etc/ssh/sshd_config</code> file.</p> </li> <li> <p>Install docker    <code>sudo pacman -S docker</code></p> </li> </ol>"},{"location":"blog/2022/10/16/raspberry-pi-media-server-with-manjaro/#docker-containers","title":"Docker containers","text":"<p>You should probably check the commands first in Docker Hub and use docker-compose instead. Make sure to change the paths.</p> <ul> <li> <p>Portainer</p> <ul> <li><code>sudo docker run -d -p 8000:8000 -p 9443:9443 --name portainer --restart=unless-stopped -v /var/run/docker.sock:/var/run/docker.sock -v portainer_data:/data portainer/portainer-ce</code></li> </ul> </li> <li> <p>Radarr</p> <ul> <li><code>sudo docker run -d --name=radarr -e PUID=1000 -e PGID=1000 -e TZ=Europe/Madrid -p 7878:7878 -v /home/pablo/config/radarr:/config --mount source=jellynfs,target=/data --restart unless-stopped lscr.io/linuxserver/radarr</code></li> </ul> </li> <li>Sonarr<ul> <li><code>sudo docker run -d --name=sonarr -e PUID=1000 -e PGID=1000 -e TZ=Europe/Madrid -p 8989:8989 -v /home/pablo/config/sonarr:/config --mount source=jellynfs,target=/data --restart unless-stopped lscr.io/linuxserver/sonarr:latest</code></li> </ul> </li> <li>Transmission<ul> <li><code>sudo docker run -d --name=transmission -e PUID=1000 -e PGID=1000 -e TZ=Europe/Madrid -e USER=pablo -e PASS=password -p 9091:9091 -p 51413:51413 -p 51413:51413/udp -v /home/pablo/config/transmission:/config -v /mnt/data/Downloads:/data/Downloads --restart unless-stopped lscr.io/linuxserver/transmission:latest</code></li> </ul> </li> <li>Jackett<ul> <li><code>sudo docker run -d --name=jackett -e PUID=1000 -e PGID=1000 -e TZ=Europe/Madrid -e AUTO_UPDATE=true -p 9117:9117 -v /home/pablo/config/jackett:/config -v /mnt/data/Downloads:/downloads --restart unless-stopped lscr.io/linuxserver/jackett:latest</code></li> </ul> </li> <li>Homer<ul> <li><code>sudo docker run -d --name=homer -e UID=1000 -e GID=1000 -p 80:8080 -v /home/pablo/config/homer:/www/assets --restart=unless-stopped b4bz/homer:latest</code></li> </ul> </li> <li>Calibre-web<ul> <li><code>sudo docker run -d --name=calibre-web -e PUID=1000 -e PGID=1000 -e TZ=Europe/Madrid -e DOCKER_MODS=linuxserver/calibre-web:calibre -p 8083:8083 -v /home/pablo/config/calibre:/config -v /mnt/data/pi-calibre-library:/books --restart unless-stopped lscr.io/linuxserver/calibre-web:latest</code></li> </ul> </li> <li>Immich<ul> <li>Install following the official documentation.</li> </ul> </li> <li>Monerod<ul> <li><code>sudo docker  run -d --restart unless-stopped --name=\"monerod\" -p 18080:18080 -p 18089:18089 -v bitmonero:/home/monero sethsimmons/simple-monerod:latest  --rpc-restricted-bind-ip=0.0.0.0 --rpc-restricted-bind-port=18089 --no-igd --no-zmq --enable-dns-blocklist --prune-blockchain</code></li> </ul> </li> </ul>"},{"location":"blog/2022/10/16/raspberry-pi-media-server-with-manjaro/#other-packages","title":"Other packages","text":"<p>Some packages I installed from Manjaro's repositories.</p> <ol> <li>Cockpit - an admin panel for the server, useful to see systemd services logs among other things (port 9090).<ul> <li><code>sudo pacman -S cockpit</code></li> <li>For some reason I started having issues accessing cockpit with Firefox but it's fine on Chromium based browsers.</li> </ul> </li> <li>I've also set up some telegram bots, using systemd.</li> </ol>"},{"location":"blog/2022/10/16/raspberry-pi-media-server-with-manjaro/#updates","title":"Updates","text":"<p>I manually run <code>sudo pacman-mirrors --fasttrack &amp;&amp; sudo pacman -Syyu</code> from time to time, and use watchtower to update docker containers.</p>"},{"location":"blog/2022/10/16/raspberry-pi-media-server-with-manjaro/#no-longer-using","title":"No longer using:","text":"<p>Plex is nice but I no longer use it in favour of Jellyfin, mostly because Plex doesn't work without internet connection. (which I run in another machine giving access to the server through nfs).</p> <ul> <li>Plex<ul> <li><code>sudo docker run -d --name=plex --net=host -e PUID=1000 -e PGID=1000 -e VERSION=latest -v /home/pablo/config/plex:/config -v \"/mnt/data/Videos/TV Shows\":/tv -v /mnt/data/Videos/Movies:/movies --restart unless-stopped lscr.io/linuxserver/plex:latest</code></li> </ul> </li> </ul> <p>Previous configurations used without nfs:</p> <ul> <li> <p>Radarr</p> <ul> <li><code>sudo docker run -d --name=radarr -e PUID=1000 -e PGID=1000 -e TZ=Europe/Madrid -p 7878:7878 -v /home/pablo/config/radarr:/config -v /mnt/data:/data --restart unless-stopped lscr.io/linuxserver/radarr</code></li> </ul> </li> <li> <p>Sonarr</p> <ul> <li><code>sudo docker run -d --name=sonarr -e PUID=1000 -e PGID=1000 -e TZ=Europe/Madrid -p 8989:8989 -v /home/pablo/config/sonarr:/config -v /mnt/data:/data --restart unless-stopped lscr.io/linuxserver/sonarr:latest</code></li> </ul> </li> <li> <p>Transmission</p> <ul> <li><code>sudo docker run -d --name=transmission -e PUID=1000 -e PGID=1000 -e TZ=Europe/Madrid -e USER=pablo -e PASS=password -p 9091:9091 -p 51413:51413 -p 51413:51413/udp -v /home/pablo/config/transmission:/config -v /mnt/data/Downloads:/data/Downloads --restart unless-stopped lscr.io/linuxserver/transmission:latest</code></li> </ul> </li> <li> <p>Syncthing - to sync folders and files across different devices on my LAN (port 8384).     Install and enable in each device:</p> <ul> <li><code>sudo pacman -S syncthing</code></li> <li><code>sudo systemctl enable syncthing@pablo.service</code></li> <li><code>sudo systemctl start syncthing@pablo.service</code></li> </ul> </li> </ul>"},{"location":"blog/2023/01/14/remove-kobo-drm/","title":"Remove Kobo DRM","text":"<p>How to remove DRM of books purchased on Kobo store using kobo-book-downloader.</p> <p></p> <ol> <li>Clone kobo-book-downloader repo:</li> </ol> <pre><code>git clone https://github.com/TnS-hun/kobo-book-downloader.git\n</code></pre> <ol> <li>Create python virtual environment and activate it:</li> </ol> <pre><code>python -m venv env\nsource env/bin/activate\n</code></pre> <ol> <li>Install dependencies:</li> </ol> <pre><code>pip install -r requirements.txt\n</code></pre> <ol> <li>Now we can start using kobo-book-downloader, the first time it will ask for your Kobo credentials.</li> <li>This only seems to work if you have a Kobo account that was registered using an email instead of an external login provider (e.g. google, facebook, rakuten). If your account isn't registered with an email you can create a new account and then link it with your original account as explained here.</li> </ol> <pre><code>python kobo-book-downloader list --all\n</code></pre> <ol> <li>After following the initial setup instructions, a list will be shown with the books you've bought.</li> </ol> <p> </p> List command <ol> <li>To download a book run the following command and choose the file(s) to download.</li> </ol> <pre><code>python kobo-book-downloader pick destination_dir/\n</code></pre> <p> </p> Download command <ol> <li> <p>The end result is a lovely DRM-free <code>.epub</code> file ready to be read in any eReader!</p> </li> <li> <p>kobo-book-downloader also offers other commands. Read more at their Github readme.</p> </li> </ol> <p>I noticed that on some free books it will fail to download, it usually means that the original file is already DRM-free.</p> <p>Bye.</p>"},{"location":"blog/2022/04/10/rrpablotbot/","title":"@rrpablotbot","text":"<p>In this post I'll showcase a bit my brand new telegram bot. In the recent years I've been fairly active on a silly mobile/web game called Rival Regions. I've created a dozen of bots and tools, some of them publicly available in RR Tools.</p> <p></p> <p>This time I bring a telegram bot which will scrape the web version of the game and retrieve useful data. It's been running for more than a month on my raspberry pi, and besides some issues with the game cookies expiring, it works great.</p> <p>If you happen to also play Rival Regions and want to try @rrpablobot just talk to him and send a link of the game. You can also add it to groups! Read more.</p>"},{"location":"blog/2022/04/11/space-engine-zoom-out-time-lapse/","title":"Space engine zoom-out time lapse","text":"<p>This game is incredible. Here is yet another space engine zoom-out video. Enjoy the ride!</p> <p></p> <p>Bye \ud83d\udc4b</p>"},{"location":"blog/2022/04/09/ive-switched-to-nextjs/","title":"I've switched to Next.js","text":"<p>As you may have read on my first post this blog started as a little GatsbyJS website. Although I like Gatsby, It's been a while I was wanting to dip my toes on the very famous and praised react framework called Next.js, as so many (probably paid) videos and articles are always pointing out how great it is.</p> Update 14/09/2023 <p>I no longer use NextJS for this website. I've switched to mkdocs material.</p> <p></p> <p>I migrated this blog mostly because of my lack of good ideas to start with this framework. So, I initiated the project with the blog-starter-typescript and after cleaning up some of the components I won't be using and changing a bit of CSS I call it done. Apparently this example comes with Tailwind css configured, but I feel more conformable with Bulma, so I've switched to that.</p> <p>Overall the whole process was pretty straight forward, but I can't see yet the so-called full potential of Next.js.</p> <p>I'm now thinking what else could I do to test around with the framework, I've heard it's image optimization is pretty good when using it's Image, so a self-hosted image gallery project comes to my mind as decent idea.</p> <p>If you are curious on how the blog is built you can check the source code on github</p> <p>So that's it, I can say now I've made a Next.js app. Bye.</p>"},{"location":"blog/2023/09/13/thinkcentre-tiny-server/","title":"Thinkcentre Tiny Server","text":""},{"location":"blog/2023/09/13/thinkcentre-tiny-server/#introduction","title":"Introduction","text":"<p>Recently I got myself a refurbished Lenovo Thinkcentre M900 Tiny which will be replacing my Raspberry Pi 4 as my home server.</p> <p> </p> Very tiny <p>Similarly to my previous post about the Raspberry Pi home server this isn't necessarily a guide rather than me taking notes so I don't forget the commands and all the tiny configurations I've done, but feel free to follow along but remember to change the commands.</p> <p>I've added a NVME 1TB SSD and a 5TB hard-drive Seagate HDD that I've shucked, which it almost didn't fit on the M900 case. It has 16GB of RAM.</p> <p>In this occasion I've installed Debian Bookworm and instead of Docker I went with Podman, so I don't need to run the containers as root user.</p> <p>For each Podman container I will create and enable a systemd service using <code>podman generate systemd</code>.</p>"},{"location":"blog/2023/09/13/thinkcentre-tiny-server/#filesystem-information","title":"Filesystem information","text":"<p>When needed podman volumes will reside in /config:</p> <ul> <li>/config/<ul> <li>calibre-web/</li> <li>homepage/</li> <li>jellyfin/</li> <li>...</li> </ul> </li> </ul> <p>5TB drive will be mounted via fstab at /mnt/data as follows:</p> <ul> <li>/mnt/data/<ul> <li>media/<ul> <li>downloads/</li> <li>movies/</li> <li>series/</li> </ul> </li> <li>backups/</li> </ul> </li> </ul>"},{"location":"blog/2023/09/13/thinkcentre-tiny-server/#initial-configuration","title":"Initial configuration","text":"<p>Setup sudo:</p> <pre><code>su -\napt install sudo\nusermod -aG sudo pablo\n</code></pre> <p>Allow ssh password authentication:</p> <p>Edit /etc/sshd/sshd_config and un-comment PasswordAuthenticacion line:</p> <pre><code>PasswordAuthenticacion yes\n</code></pre> <p>Install basic packages:</p> <pre><code>sudo apt install podman git htop\n</code></pre> <p>These are the podman/docker containers I'm running with their respective commands, configuration for these will reside at /config and mounted for each container.</p>"},{"location":"blog/2023/09/13/thinkcentre-tiny-server/#give-permissions-to-podman-user","title":"Give permissions to podman user","text":"<p>Maybe be needed with some podman images.</p> <pre><code>podman unshare chown 1000:1000 -R /config/SERVICE\npodman unshare chown 1000:1000 -R /mnt/data/media\n</code></pre>"},{"location":"blog/2023/09/13/thinkcentre-tiny-server/#enable-lingering-for-the-user-that-will-run-podman","title":"Enable lingering for the user that will run podman","text":"<pre><code>loginctl enable-linger pablo\n</code></pre>"},{"location":"blog/2023/09/13/thinkcentre-tiny-server/#allow-unprivileged-access-to-port-80-and-53","title":"Allow unprivileged access to port 80 and 53","text":"<p>Edit /etc/sysctl.conf and add:</p> <pre><code>net.ipv4.ip_unprivileged_port_start=53\n</code></pre> <p>Port 80 for Homepage and port 53 for Pihole dns.</p> <p>reboot.</p>"},{"location":"blog/2023/09/13/thinkcentre-tiny-server/#installing-podman-containers","title":"Installing Podman containers","text":""},{"location":"blog/2023/09/13/thinkcentre-tiny-server/#portainer","title":"Portainer","text":"<pre><code>podman run -d --name portainer \\\n-p 8000:8000 -p 9443:9443  \\\n--restart=unless-stopped \\\n--security-opt label=disable \\\n-v /var/run/user/1000/podman/podman.sock:/var/run/docker.sock \\\n-v portainer_data:/data \\\ndocker.io/portainer/portainer-ce\n</code></pre> <pre><code>podman generate systemd --new --name portainer &gt; ~/.config/systemd/user/portainer.service\n\nsystemctl --user enable --now portainer.service\n</code></pre>"},{"location":"blog/2023/09/13/thinkcentre-tiny-server/#homepage","title":"Homepage","text":"<pre><code>podman run -d --name homepage \\\n-p 80:3000 \\\n-v /config/homepage:/app/config \\\n-v /var/run/user/1000/podman/podman.sock:/var/run/docker.sock \\\nghcr.io/gethomepage/homepage:latest\n</code></pre> <pre><code>podman generate systemd --new --name homepage &gt; ~/.config/systemd/user/homepage.service\n\nsystemctl --user enable homepage.service\n</code></pre>"},{"location":"blog/2023/09/13/thinkcentre-tiny-server/#pi-hole","title":"Pi-hole","text":"<pre><code>podman run -d \\\n--name pihole \\\n-p 53:53/tcp -p 53:53/udp \\\n-p 3380:80/tcp \\\n-e TZ=\"Europe/Madrid\" \\\n-e WEBPASSWORD=password \\\n-v pihole_pihole:/etc/pihole:Z \\\n-v pihole_dnsmasq:/etc/dnsmasq.d:Z \\\n--dns=127.0.0.1 --dns=1.1.1.1 \\\n--restart=unless-stopped \\\n--hostname pi.hole \\\ndocker.io/pihole/pihole:latest\n</code></pre> <pre><code>podman generate systemd --new --name pihole &gt; ~/.config/systemd/user/pihole.service\n\nsystemctl --user enable --now pihole.service\n</code></pre>"},{"location":"blog/2023/09/13/thinkcentre-tiny-server/#calibre-web","title":"Calibre web","text":"<pre><code>podman run -d \\\n--name=calibre-web-nightly \\\n-e PUID=1000 -e PGID=1000 \\\n-e TZ=Europe/Madrid \\\n-e DOCKER_MODS=ghcr.io/linuxserver/mods:universal-calibre \\\n-p 8083:8083 \\\n-v /config/calibre-web/config:/config \\\n-v /config/calibre-web/library:/books \\\n--restart unless-stopped \\\nlscr.io/linuxserver/calibre-web:nightly\n</code></pre> <pre><code>podman generate systemd --new --name calibre-web-nightly &gt; ~/.config/systemd/user/calibre-web.service\n\nsystemctl --user enable calibre-web.service\n</code></pre>"},{"location":"blog/2023/09/13/thinkcentre-tiny-server/#jellyfin","title":"Jellyfin","text":"<pre><code>podman volume create jellyfin-cache\n</code></pre> <pre><code>podman run \\\n--detach \\\n--label \"io.containers.autoupdate=registry\" \\\n--name jellyfin \\\n--publish 8096:8096/tcp \\\n--rm \\\n--user $(id -u):$(id -g) \\\n--userns keep-id \\\n--volume jellyfin-cache:/cache:Z \\\n--volume /config/jellyfin:/config \\\n--mount type=bind,source=/mnt/data/media,destination=/media,ro=false,relabel=private \\\ndocker.io/jellyfin/jellyfin:latest\n</code></pre> <pre><code>podman generate systemd --new --name jellyfin &gt; ~/.config/systemd/user/jellyfin.service\n\nsystemctl --user enable jellyfin.service\n</code></pre>"},{"location":"blog/2023/09/13/thinkcentre-tiny-server/#immich","title":"Immich","text":"<p>Monolithic version from https://github.com/imagegenius/docker-immich/</p> <pre><code>podman run -d \\\n--name=immich \\\n-e PUID=1000 \\\n-e PGID=1000 \\\n-e TZ=Europe/Madrid \\\n-e DB_HOSTNAME=192.168.1.119 \\\n-e DB_USERNAME=postgres \\\n-e DB_PASSWORD=postgres \\\n-e DB_DATABASE_NAME=immich \\\n-e REDIS_HOSTNAME=192.168.1.119 \\\n-e DISABLE_TYPESENSE=false \\\n-p 2283:8080 \\\n-v /config/immich:/config \\\n-v /home/pablo/immich-app/library:/photos \\\n--restart unless-stopped \\\nghcr.io/imagegenius/immich:latest\n</code></pre> <pre><code>podman generate systemd --new --name immich &gt; ~/.config/systemd/user/immich.service\n\nsystemctl --user enable immich.service\n</code></pre> <p>This container requires two other containers to be run:</p>"},{"location":"blog/2023/09/13/thinkcentre-tiny-server/#redis","title":"Redis","text":"<pre><code>podman run -d \\\n--name=redis \\\n-p 6379:6379 \\\ndocker.io/redis\n</code></pre> <pre><code>podman generate systemd --new --name redis &gt; ~/.config/systemd/user/redis.service\n\nsystemctl --user enable redis.service\n</code></pre>"},{"location":"blog/2023/09/13/thinkcentre-tiny-server/#postgres","title":"Postgres","text":"<p>Check latest version: https://hub.docker.com/r/tensorchord/pgvecto-rs/tags?name=pg14-v0.1</p> <pre><code>podman run -d \\\n    --name=postgres14 \\\n    -e POSTGRES_USER=postgres \\\n    -e POSTGRES_PASSWORD=postgres \\\n    -e POSTGRES_DB=immich \\\n    -v path_to_postgres:/var/lib/postgresql/data \\\n    -p 5432:5432 docker.io/tensorchord/pgvecto-rs:-v0.1.13\n</code></pre> <pre><code>podman generate systemd --new --name postgres14 &gt; ~/.config/systemd/user/postgres14.service\n\nsystemctl --user enable postgres14.service\n</code></pre>"},{"location":"blog/2023/09/13/thinkcentre-tiny-server/#radarr","title":"Radarr","text":"<pre><code>podman run -d --name=radarr \\\n-e PUID=1000 -e PGID=1000 \\\n-e TZ=Europe/Madrid \\\n-p 7878:7878 \\\n-v /config/radarr:/config \\\n--mount type=bind,source=/mnt/data/media,destination=/data,ro=false,relabel=private \\\n--restart unless-stopped \\\nlscr.io/linuxserver/radarr\n</code></pre> <pre><code>podman generate systemd --new --name radarr &gt; ~/.config/systemd/user/radarr.service\n\nsystemctl --user enable radarr.service\n</code></pre>"},{"location":"blog/2023/09/13/thinkcentre-tiny-server/#sonarr","title":"Sonarr","text":"<pre><code>podman run -d --name=sonarr \\\n-e PUID=1000 -e PGID=1000 -e \\\nTZ=Europe/Madrid \\\n-p 8989:8989 \\\n-v /config/sonarr:/config \\\n--mount type=bind,source=/mnt/data/media,destination=/data,ro=false,relabel=private \\\n--restart unless-stopped lscr.io/linuxserver/sonarr:latest\n</code></pre> <pre><code>podman generate systemd --new --name sonarr &gt; ~/.config/systemd/user/sonarr.service\n\nsystemctl --user enable sonarr.service\n</code></pre>"},{"location":"blog/2023/09/13/thinkcentre-tiny-server/#transmision","title":"Transmision","text":"<pre><code>podman run -d --name=transmission \\\n-e PUID=1000 -e PGID=1000 \\\n-e TZ=Europe/Madrid \\\n-e USER=pablo -e PASS=password \\\n-p 9091:9091 -p 51413:51413 -p 51413:51413/udp \\\n-v /config/transmission:/config \\\n-v /mnt/data/media/downloads:/data/downloads:Z \\\n--restart unless-stopped lscr.io/linuxserver/transmission:latest\n</code></pre> <pre><code>podman generate systemd --new --name transmission &gt; ~/.config/systemd/user/transmission.service\n\nsystemctl --user enable transmission.service\n</code></pre>"},{"location":"blog/2023/09/13/thinkcentre-tiny-server/#monero","title":"Monero","text":"<pre><code>podman volume create bitmonero\n</code></pre> <pre><code>podman run -d  --name=\"monerod\" \\\n--restart unless-stopped \\\n-p 18080:18080 -p 18089:18089 \\\n-v bitmonero:/home/monero \\\ndocker.io/sethsimmons/simple-monerod:latest --rpc-restricted-bind-ip=0.0.0.0 --rpc-restricted-bind-port=18089 --no-igd --no-zmq --enable-dns-blocklist --prune-blockchain\n</code></pre> <pre><code>podman generate systemd --new --name monerod &gt; ~/.config/systemd/user/monerod.service\n\nsystemctl --user enable monero.service\n</code></pre>"},{"location":"blog/2023/09/13/thinkcentre-tiny-server/#jackett","title":"Jackett","text":"<pre><code>podman run -d --name=jackett \\\n-e PUID=1000 -e PGID=1000 \\\n-e TZ=Europe/Madrid -e \\\nAUTO_UPDATE=true \\\n-p 9117:9117 \\\n-v /config/jackett:/config \\\n-v /mnt/data/media/downloads:/downloads \\\n--restart unless-stopped \\\nlscr.io/linuxserver/jackett:latest\n</code></pre> <pre><code>podman generate systemd --new --name jackett &gt; ~/.config/systemd/user/jackett.service\n\nsystemctl --user enable jackett.service\n</code></pre>"},{"location":"blog/2023/09/13/thinkcentre-tiny-server/#glances","title":"Glances","text":"<pre><code>podman run -d --name glances \\\n--restart=\"always\" \\\n-p 61208-61209:61208-61209 \\\n-e TZ=Europe/Madrid \\\n-e GLANCES_OPT=\"-w\" \\\n-v /run/user/1000/podman/podman.sock:/run/user/1000/podman/podman.sock:ro \\\n--pid host nicolargo/glances:latest-full\n</code></pre> <pre><code>podman generate systemd --new --name glances &gt; ~/.config/systemd/user/glances.service\n\nsystemctl --user enable glances.service\n</code></pre>"},{"location":"blog/2023/09/13/thinkcentre-tiny-server/#watchtower","title":"Watchtower","text":"<pre><code>podman run -d --name watchtower \\\n-v /var/run/user/1000/podman/podman.sock:/var/run/docker.sock \\\ndocker.io/containrrr/watchtower \\\n--cleanup \\\n--schedule \"0 0 4 * * 0\"\n</code></pre> <pre><code>podman generate systemd --new --name watchtower &gt; ~/.config/systemd/user/watchtower.service\n\nsystemctl --user enable watchtower.service\n</code></pre>"},{"location":"blog/2023/09/13/thinkcentre-tiny-server/#minecraft-server","title":"Minecraft server","text":"<pre><code>podman run -d --name mcserver-paper \\\n-v /config/mcserver:/data \\\n-e UID=1000 \\\n-e GID=1000 \\\n-e TYPE=PAPER \\\n-e MEMORY=12G \\\n-e USE_AIKAR_FLAGS=true \\\n-e VERSION=1.20.4 \\\n-e CREATE_CONSOLE_IN_PIPE=true \\\n-e ENABLE_RCON=false \\\n-p 25565:25565 \\\n-e EULA=TRUE docker.io/itzg/minecraft-server\n</code></pre> <pre><code>podman generate systemd --new --name mcserver-paper &gt; ~/.config/systemd/user/mcserver.service\n\nsystemctl --user enable mcserver.service\n</code></pre>"},{"location":"blog/2023/09/13/thinkcentre-tiny-server/#playitt","title":"Playitt","text":"<pre><code>podman volume create playitgg\n</code></pre> <pre><code>podman run -d \\\n--name playitgg \\\n-v playitgg:/app \\\ndocker.io/pepaondrugs/playitgg-docker:latest\n</code></pre> <pre><code>podman generate systemd --new --name playitgg &gt; ~/.config/systemd/user/playitgg.service\n\nsystemctl --user enable playitgg.service\n</code></pre>"},{"location":"blog/2023/09/13/thinkcentre-tiny-server/#my-own-podmandocker-images","title":"My own podman/docker images","text":""},{"location":"blog/2023/09/13/thinkcentre-tiny-server/#podman-registry","title":"Podman registry","text":"<pre><code>podman run -d -p 5000:5000 --restart=always --name registry registry:2\n</code></pre> <pre><code>podman generate systemd --new --name registry &gt; ~/.config/systemd/user/registry.service\n</code></pre>"},{"location":"blog/2023/09/13/thinkcentre-tiny-server/#pablo-bot","title":"Pablo bot","text":"<p>My telegram bot</p>"},{"location":"blog/2023/09/13/thinkcentre-tiny-server/#on-my-dev-machine","title":"On my dev machine","text":"<pre><code>podman build -t pablo-bot .\n</code></pre> <pre><code>podman tag localhost/pablo-bot 192.168.1.119:5000/pablo-bot\npodman push --tls-verify=false 192.168.1.119:5000/pablo-bot\n</code></pre>"},{"location":"blog/2023/09/13/thinkcentre-tiny-server/#on-my-server","title":"On my server","text":"<pre><code>podman pull --tls-verify=false localhost:5000/pablo-bot\n</code></pre> <pre><code>podman run -d --name pablo-bot \\\n--tls-verify=false \\\n-v /config/pablo-bot/config.ini:/pablo-bot/config.ini \\\n-v /config/pablo-bot/speed.json:/pablo-bot/speed.json \\\nlocalhost:5000/pablo-bot\n</code></pre> <pre><code>podman generate systemd --new --name pablo-bot &gt; ~/.config/systemd/user/pablo-bot.service\n</code></pre> <pre><code>systemctl --user restart pablo-bot.service\n</code></pre>"},{"location":"blog/2023/09/13/thinkcentre-tiny-server/#calibre-tg-bot","title":"Calibre-tg-bot","text":"<p>My own telegram bot that interacts with calibre library, it can add new books to the database and query books from the library.</p> <pre><code>podman run -d --name calibre-tg-bot --volume /config/calibre-web/library:/calibre-tg-bot/books --restart unless-stopped calibre-tg-bot\n</code></pre> <pre><code>podman generate systemd --new --name calibre-tg-bot &gt; ~/.config/systemd/user/calibre-tg-bot.service\n\nsystemctl --user enable calibre-tg-bot.service\n</code></pre>"},{"location":"blog/2023/09/13/thinkcentre-tiny-server/#read-logs","title":"Read logs","text":"<pre><code>podman logs --follow container_name\n</code></pre>"},{"location":"projects/banana-spleet/","title":"Banana Spleet","text":"<p>Recently I've been working on my spare time on a simple GUI app for the interesting tool called Spleeter by Deezer. Spleeter is a \"source separation library with petrained models\" whatever that means. It basically takes a song and splits it according to the different instruments and vocals it's AI detects. The end result is indeed quite impressive.</p> <p></p> <p>As Spleeter is originally just a CLI app, what I did was basically a GUI to use it. I've found a few similar projects on github but the ones that stood out to me sadly only worked on Windows (I use linux btw). It was also a great opportunity to use this silly name.</p> <p>My take on this was using python, not only because I'm already quite familiar with this language, but also because that's also what Spleeter is built with, so I can easily import it's methods.</p> <p>You can read more and install from here.</p>"},{"location":"projects/geoguessr-random-bot/","title":"Geoguessr random bot","text":""},{"location":"projects/geoguessr-random-bot/#geoguessr-random-challenges-telegram-bot","title":"Geoguessr random challenges telegram bot","text":"<p>I've made yet another telegram bot! Yay!</p> <p>@geo_random_bot will send you random Geoguessr challenges links.</p> <p></p> <p>\"GeoGuessr is a geography game which takes you on a journey around the world and challenges your ability to recognize your surroundings.\"</p> <p>Geoguessr challenges are a great way to start playing this game as they are completely free to play. This bot receives the challenge and stores them in a database, then it will answer whenever it receives the <code>/random</code> command with a previously stored random link. Should work in groups too.</p> <p> </p> A random challenge"},{"location":"projects/geoguessr-random-bot/#usage","title":"Usage","text":"<p>Talk to @geo_random_bot</p> <ul> <li> <p><code>/random</code> sends a random challenge</p> </li> <li> <p>You can also specify the map, example:</p> <p><code>/random World</code></p> </li> <li> <p><code>/all</code> Shows a list of every challenge (Doesn't work in groups)</p> </li> </ul> <p>Send a challenge link to the bot and it will be saved it on the database.</p> <ul> <li>Example of a challenge link: <code>https://geoguessr.com/challenge/e0gOWtp7rzSKbPgw</code></li> </ul>"},{"location":"projects/geoguessr-random-bot/#other-stuff","title":"Other stuff","text":"<p>In case you are interested in the technical aspects of the bot I've used the following python libraries:</p> <ul> <li>python-telegram-bot to make the bot.</li> <li>firebase-admin google's firestore database</li> <li>requests to contact geoguessr api to gather the map name and the rules of the challenge.</li> </ul> <p>This project took me a couple of hours to get the core functionality (store and send links) working and a couple of weeks more to polish everything else, such as showing the name of the map and the rules of the challenge, adding buttons and the complementary commands (<code>/start</code> and <code>/all</code>).</p> <p>Might add some other features in the futures... Maybe.</p>"},{"location":"projects/launchpad2kb/","title":"Launchpad2KB","text":"<p>A linux CLI tool to map keyboard hotkeys with the Novation Launchpad device.</p> <p>Read on Github</p> <p></p> <p>Important: I have only tested this implementation with the first Novation Launchpad, model <code>NOVLPD01</code>.</p>"},{"location":"projects/launchpad2kb/#usage","title":"Usage","text":"<p>Download and unzip from latest release</p> <pre><code>./launchpad2KB\n</code></pre> <p>This will ask for the MIDI port, and will default the config file to <code>config/config.yml</code>. You can also pass the port number and the config file, as follows:</p> <pre><code>./launchpad2KB --port=1 --config=config/config.yml\n</code></pre> <p>Or</p> <pre><code>./launchpad2KB -p 1 -c config/config.yml\n</code></pre> <p>For some reason sometimes it won't start detecting the device presses. When this happens pressing the <code>mixer</code> button on the top-right of your device is enough for it to start working.</p>"},{"location":"projects/launchpad2kb/#configuration","title":"Configuration","text":"<p>The configuration file must be in <code>.yaml</code> or <code>.yml</code> format. There is an example config file at config/config.yml. For each cell you will require to set it as follows:</p> <p>Example:</p> <pre><code>- cell: 112\nkeys:\n- \"ctrl\"\n- \"shift\"\n- \"e\"\ncolor: 120\n</code></pre> <p>This will bind the cell 112 to trigger <code>CTRL+SHIFT+E</code> when pressed.</p> <ul> <li><code>cell</code> indicates the cell number (see image below).</li> <li><code>keys</code> are the keyboard keys to be pressed. Keys reference.</li> <li><code>color</code> is a number ranging from 0 to 127.</li> </ul> <p>Example of multiple cells:</p> <pre><code>- cell: 112\nkeys:\n- \"ctrl\"\n- \"shift\"\n- \"e\"\ncolor: 120\n- cell: 113\nkeys:\n- \"ctrl\"\n- \"shift\"\n- \"f\"\ncolor: 80\n- cell: 113\nkeys:\n- \"f\"\ncolor: 60\n</code></pre>"},{"location":"projects/launchpad2kb/#run-from-source","title":"Run from source","text":"<ul> <li>Create virtual enviroment &amp; install dependencies</li> </ul> <pre><code>virtualenv env\nsource env/bin/activate\np\u00ecp install -r requirements.txt\n</code></pre> <ul> <li>Tkinter is also required:</li> </ul> <p>Arch linux</p> <pre><code>sudo pacman -S tk\n</code></pre> <p>Debian &amp; Ubuntu</p> <pre><code>sudo apt-get install python3-tk\n</code></pre> <p>Fedora</p> <pre><code>sudo dnf install python3-tkinter\n</code></pre> <p>Then run as shown previously replacing <code>./launchpad2KB</code> with <code>python src/main.py</code>.</p> <p>Haven't tested it on Windows/MacOS.</p>"},{"location":"projects/launchpad2kb/#cells","title":"Cells","text":""},{"location":"projects/rrpablobot/","title":"@rrpablotbot","text":"<p>In this post I'll showcase a bit my brand new telegram bot. In the recent years I've been fairly active on a silly mobile/web game called Rival Regions. I've created a dozen of bots and tools, some of them publicly available in RR Tools.</p> <p></p> <p>This time I bring a telegram bot which will scrape the web version of the game and retrieve useful data. It's been running for more than a month on my raspberry pi, and besides some issues with the game cookies expiring, it works great.</p> <p>If you happen to also play Rival Regions and want to try @rrpablobot just talk to him and send a link of the game. You can also add it to groups! Read more.</p>"},{"location":"blog/archive/2023/","title":"2023","text":""},{"location":"blog/archive/2022/","title":"2022","text":""},{"location":"blog/archive/2021/","title":"2021","text":""},{"location":"blog/category/linux/","title":"Linux","text":""},{"location":"blog/category/self-hosted/","title":"Self-hosted","text":""},{"location":"blog/category/games/","title":"Games","text":""},{"location":"blog/category/piracy/","title":"Piracy","text":""},{"location":"blog/category/reading/","title":"Reading","text":""},{"location":"blog/category/telegram/","title":"Telegram","text":""},{"location":"blog/category/tech/","title":"Tech","text":""},{"location":"blog/category/bot/","title":"Bot","text":""},{"location":"blog/category/blog/","title":"blog","text":""},{"location":"blog/category/music/","title":"Music","text":""},{"location":"blog/page/2/","title":"Blog","text":""}]}